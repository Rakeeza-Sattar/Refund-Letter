<?php
require_once 'vendor/autoload.php';
require_once 'email_config.php';

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

header('Content-Type: application/json');

// Get the POST data
$data = json_decode(file_get_contents('php://input'), true);

if (!$data || !isset($data['shareEmail']) || !isset($data['letter']) || !isset($data['fullName'])) {
    echo json_encode(['success' => false, 'error' => 'Missing required data']);
    exit;
}

try {
    // Generate PDF
    $pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
    
    // Set document information
    $pdf->SetCreator('RefundPro - Professional Refund Letters');
    $pdf->SetAuthor($data['fullName']);
    $pdf->SetTitle('Premium Refund Request Letter - Shared Copy');
    $pdf->SetSubject('Refund Request Letter');
    
    // Remove default header/footer
    $pdf->setPrintHeader(false);
    $pdf->setPrintFooter(false);
    
    // Set margins
    $pdf->SetMargins(20, 20, 20);
    $pdf->SetAutoPageBreak(TRUE, 20);
    
    // Add a page
    $pdf->AddPage();
    
    // Set font for header
    $pdf->SetFont('helvetica', 'B', 16);
    $pdf->SetTextColor(37, 99, 235);
    $pdf->Cell(0, 10, 'Premium Refund Request Letter', 0, 1, 'C');
    $pdf->Ln(5);
    
    // Add "Shared Copy" watermark
    $pdf->SetFont('helvetica', 'I', 10);
    $pdf->SetTextColor(100, 100, 100);
    $pdf->Cell(0, 5, 'Shared Copy - Generated by RefundPro Premium', 0, 1, 'C');
    $pdf->Ln(10);
    
    // Set font for content
    $pdf->SetFont('helvetica', '', 11);
    $pdf->SetTextColor(0, 0, 0);
    
    // Add letter content
    $letterLines = explode("\n", $data['letter']);
    foreach ($letterLines as $line) {
        $line = trim($line);
        if (empty($line)) {
            $pdf->Ln(4);
        } else {
            $pdf->MultiCell(0, 6, $line, 0, 'L', false, 1);
            $pdf->Ln(2);
        }
    }
    
    // Add footer
    $pdf->Ln(10);
    $pdf->SetFont('helvetica', 'I', 9);
    $pdf->SetTextColor(100, 100, 100);
    $pdf->Cell(0, 5, 'Generated by RefundPro Premium Service', 0, 1, 'C');
    $pdf->Cell(0, 5, 'Shared on: ' . date('F j, Y \a\t g:i A'), 0, 1, 'C');
    
    // Generate PDF content
    $pdfContent = $pdf->Output('', 'S');
    $pdfFileName = 'premium_refund_letter_shared_' . date('Y-m-d') . '.pdf';
    
    // Create PHPMailer instance
    $mail = new PHPMailer(true);
    
    try {
        // Server settings for Gmail SMTP
        $mail->isSMTP();
        $mail->Host       = SMTP_HOST;
        $mail->SMTPAuth   = true;
        $mail->Username   = SMTP_USERNAME;
        $mail->Password   = SMTP_PASSWORD;
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port       = SMTP_PORT;
        
        // Recipients
        $mail->setFrom(FROM_EMAIL, FROM_NAME);
        $mail->addAddress($data['shareEmail']);
        $mail->addReplyTo(REPLY_TO_EMAIL, REPLY_TO_NAME);
        
        // Content
        $mail->isHTML(false);
        $mail->Subject = 'ðŸ“„ Premium Refund Letter Shared with You - RefundPro';
        
        $message = "Hello,\n\n";
        $message .= "You have received a Premium Refund Request Letter from " . htmlspecialchars($data['fullName']) . ".\n\n";
        $message .= "ðŸŽ¯ This is a professionally crafted refund letter that includes:\n\n";
        $message .= "âœ… Legal references and regulations\n";
        $message .= "âœ… Professional formatting\n";
        $message .= "âœ… Optimized language for maximum success\n";
        $message .= "âœ… Ready-to-submit format\n\n";
        $message .= "The complete letter is attached as a PDF document.\n\n";
        $message .= "Best regards,\n";
        $message .= "The RefundPro Team\n\n";
        $message .= "ðŸ“§ Need your own premium refund letter? Visit our service at " . $_SERVER['HTTP_HOST'];
        
        $mail->Body = $message;
        
        // Add PDF attachment
        $mail->addStringAttachment($pdfContent, $pdfFileName, 'base64', 'application/pdf');
        
        // Send email
        $mail->send();
        
        echo json_encode([
            'success' => true, 
            'message' => 'Premium letter shared successfully!'
        ]);
        
    } catch (Exception $e) {
        echo json_encode([
            'success' => false, 
            'error' => 'Failed to send email: ' . $mail->ErrorInfo
        ]);
    }
    
} catch (Exception $e) {
    echo json_encode([
        'success' => false, 
        'error' => 'Error sharing letter: ' . $e->getMessage()
    ]);
}
?>
